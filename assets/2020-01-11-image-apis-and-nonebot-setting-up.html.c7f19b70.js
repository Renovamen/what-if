import{d as e}from"./app.edec767f.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const n={},s=e(`<p>Here is a list of APIs that can return some images and notes of the process of setting up NoneBot and CoolQ HTTP API (on my Mac).</p><h2 id="misc" tabindex="-1"><a class="header-anchor" href="#misc" aria-hidden="true">#</a> Misc</h2><p>I wrote a qqbot which can throw a picture of tempting food back to the people who send pictures of tempting food to you (which we called &#39;\u653E\u6BD2&#39; in Chinese) automatically. I called this bot <a href="https://github.com/Renovamen/AntiFood" target="_blank" rel="noopener noreferrer">AntiFood</a>, it is based on <a href="https://github.com/richardchien/nonebot" target="_blank" rel="noopener noreferrer">NoneBot</a>. So here is a list of APIs that can return some images and notes of the process of setting up NoneBot and <a href="https://github.com/richardchien/coolq-http-api" target="_blank" rel="noopener noreferrer">CoolQ HTTP API</a>.</p><h2 id="image-apis" tabindex="-1"><a class="header-anchor" href="#image-apis" aria-hidden="true">#</a> Image APIs</h2><ul><li>Unsplash <ul><li>Offical: https://source.unsplash.com/</li><li>Lorem Picsum: https://picsum.photos/</li></ul></li><li>Cats: https://thecatapi.com/</li><li>Dogs: https://shibe.online/</li><li>Anime: http://img.xjh.me/</li></ul><p>Finally, I choose to crawl food pictures from Baidu Image...</p><h2 id="coolq-http-api" tabindex="-1"><a class="header-anchor" href="#coolq-http-api" aria-hidden="true">#</a> CoolQ HTTP API</h2><p>NoneBot depends on CoolQ HTTP API (<a href="https://cqhttp.cc/docs/4.14/#/" target="_blank" rel="noopener noreferrer">docs</a>), it can be deployed by using docker.</p><p>Pull docker image and create a folder for CoolQ:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">docker</span> pull richardchien/cqhttp:latest
<span class="token function">mkdir</span> coolq
</code></pre></div><p>Run it (on <code>127.0.0.1:9000</code>, default password is <code>MAX8char</code>):</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">docker</span> run -ti --rm --name cqhttp-test <span class="token punctuation">\\</span> 
           -v <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/coolq:/home/user/coolq <span class="token punctuation">\\</span>
           -p <span class="token number">9000</span>:9000 <span class="token punctuation">\\</span>
           -p <span class="token number">5700</span>:5700 <span class="token punctuation">\\</span>
           -e <span class="token assign-left variable">COOLQ_ACCOUNT</span><span class="token operator">=</span><span class="token number">123456789</span> <span class="token punctuation">\\</span> <span class="token comment"># qq id of the bot</span>
           -e <span class="token assign-left variable">COOLQ_URL</span><span class="token operator">=</span>https://dlsec.cqp.me/cqp-tuling <span class="token punctuation">\\</span>
           -e <span class="token assign-left variable">CQHTTP_SERVE_DATA_FILES</span><span class="token operator">=</span>yes <span class="token punctuation">\\</span>
           richardchien/cqhttp:latest
</code></pre></div><h2 id="nonebot" tabindex="-1"><a class="header-anchor" href="#nonebot" aria-hidden="true">#</a> NoneBot</h2><p><a href="https://nonebot.cqp.moe/guide/" target="_blank" rel="noopener noreferrer">Here</a> are docs of NoneBot.</p><p>Modify <code>coolq/app/io.github.richardchien.coolqhttpapi/config/123456789.ini</code> (config file of CoolQ):</p><div class="language-ini ext-ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">123456789</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">serve_data_files</span> <span class="token punctuation">=</span> <span class="token value attr-value">yes</span>
<span class="token key attr-name">ws_reverse_api_url</span> <span class="token punctuation">=</span> <span class="token value attr-value">ws://host.docker.internal:8080/ws/api/</span>
<span class="token key attr-name">ws_reverse_event_url</span> <span class="token punctuation">=</span> <span class="token value attr-value">ws://host.docker.internal:8080/ws/event/</span>
<span class="token key attr-name">use_ws_reverse</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
</code></pre></div><p>Here use <code>host.docker.internal</code> but not <code>127.0.0.1</code>, because here CoolQ is running in docker.</p><p>Install NoneBot:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>pip <span class="token function">install</span> nonebot
</code></pre></div><p>Then, just run <code>bot.py</code>.</p><p>Note that sending images needs CoolQ Pro, and CoolQ&#39;s CQ code can only send images under <code>coolq/data/image/</code>. But CoolQ HTTP API <a href="https://cqhttp.cc/docs/4.14/#/CQCode" target="_blank" rel="noopener noreferrer">enhances</a> it.</p>`,21);function o(t,p){return s}var i=a(n,[["render",o]]);export{i as default};
